name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NODE_VERSION: "22.14.0"

jobs:
  # Job 1: Code Quality & Security
  quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Ensure consistent line endings
          autocrlf: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Configure git for line endings
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Auto-format code
        run: npx prettier --write .

      - name: Check if formatting changed files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "❌ Code formatting issues found. Please run 'npm run format' locally."
            echo "Modified files:"
            git status --porcelain
            exit 1
          else
            echo "✅ Code is properly formatted"
          fi

      - name: Security audit
        run: npm audit --audit-level=moderate

  # Job 2: Unit Tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Ensure consistent line endings
          autocrlf: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

  # Job 3: E2E Tests
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Ensure consistent line endings
          autocrlf: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npm run playwright:install

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # Job 4: Build Test
  build:
    name: Production Build
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Ensure consistent line endings
          autocrlf: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 7

  # Job 5: All Tests Summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests, build]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          echo "Unit tests: ${{ needs.unit-tests.result }}"
          echo "E2E tests: ${{ needs.e2e-tests.result }}"
          echo "Build: ${{ needs.build.result }}"

          if [[ "${{ needs.unit-tests.result }}" == "failure" || "${{ needs.e2e-tests.result }}" == "failure" || "${{ needs.build.result }}" == "failure" ]]; then
            echo "❌ One or more jobs failed"
            exit 1
          else
            echo "✅ All jobs completed successfully"
          fi
