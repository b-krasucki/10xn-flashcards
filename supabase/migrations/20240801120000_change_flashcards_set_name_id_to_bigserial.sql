-- migration: change id column from uuid to bigserial
-- table: public.flashcards_deck_name
-- column: id
-- purpose: modify the primary key 'id' from uuid type to bigserial (auto-incrementing integer).
--
-- important considerations:
-- 1. data loss: this migration involves dropping the original 'id' (uuid) column. all existing uuid values will be permanently lost.
--    new 'id' values will be generated by a sequence, starting from 1.
-- 2. foreign keys: any foreign key constraints in other tables that reference 'public.flashcards_deck_name.id'
--    will be broken. these foreign keys must be identified and updated manually to reflect the new 'id' type (bigint)
--    and potentially new values. this script does not handle fk updates.
-- 3. data migration: no automatic data migration from old uuid ids to new bigserial ids is performed by this script.
--    if a mapping between old and new ids is required, it must be handled separately before or after this migration.
-- 4. rls policies: existing row level security policies on 'public.flashcards_deck_name' should be reviewed
--    to ensure they are still appropriate after this change, especially if they referenced the 'id' column's value or type.
--
-- always backup your database before applying destructive migrations.

-- step 1: drop the existing primary key constraint on the 'id' (uuid) column.
-- the default constraint name is typically <tablename>_pkey.
-- if your constraint has a different name, you will need to update it here.
-- you can find the constraint name using:
--   select con.conname
--   from pg_constraint con
--   join pg_class t on t.oid = con.conrelid
--   where t.relname = 'flashcards_deck_name' and con.contype = 'p' and t.relnamespace = (select oid from pg_namespace where nspname = 'public');
alter table public.flashcards_deck_name
drop constraint if exists flashcards_deck_name_pkey;

-- step 2: add a new column 'id_temp' of type bigserial, which will become the new primary key.
-- 'bigserial' automatically creates a sequence, sets 'not null', and makes it an auto-incrementing integer.
-- by adding 'primary key' here, it immediately becomes the pk for the table.
alter table public.flashcards_deck_name
add column id_temp bigserial primary key;

-- step 3: drop the old 'id' (uuid) column.
-- warning: this is a destructive operation. all existing uuid data in this column will be lost.
alter table public.flashcards_deck_name
drop column id;

-- step 4: rename the new 'id_temp' column to 'id'.
alter table public.flashcards_deck_name
rename column id_temp to id;
